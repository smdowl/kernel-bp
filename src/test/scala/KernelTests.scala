import breeze.linalg.{max, DenseMatrix}
import kernel.kernels.{SlowRBFKernel, RBFKernel}
import org.scalatest._

class KernelTests extends Test {
  val kernel = new RBFKernel

  test("Simple test") {
    val p1 = DenseMatrix(1.0, 1.0)
    kernel(p1, p1, 0.5) === DenseMatrix((1.0, 1.0), (1.0, 1.0)) shouldBe true
  }

  test("Real example") {
    val p1 = DenseMatrix(-0.348099491208178, -0.264391385304961)
    val res = kernel(p1, p1, 0.3)
    val maxDiff: Double = max(res - DenseMatrix((1.000000000000000, 0.976913835942669), (0.976913835942669, 1.000000000000000)))
    maxDiff < 1e-3 shouldBe true
  }

  test("More complex test") {
    val p1 = DenseMatrix(1.0, 2.0)
    val res = kernel(p1, p1, 0.5)
    val maxDiff: Double = max(res - DenseMatrix((1.0, 0.135335283236613), (0.135335283236613, 1.0)))
    maxDiff < 1e-3 shouldBe true
  }

  test("Different dims") {
    val p1 = DenseMatrix(2.0, 4.0)
    val p2 = DenseMatrix(4.0)

    val res = kernel(p1, p2, 0.5)
    println(res)
    val maxDiff: Double = max(res - DenseMatrix(0.000335462627903, 1.000000000000000))
    maxDiff < 1e-3 shouldBe true
  }

  test("More complex different dims") {
    val p1 = DenseMatrix(0.12436,0.038567,0.24562,-0.37195,-0.23604,0.50772,-0.60672,-0.077744,1.6719,0.15986,-0.27074,0.49984,-0.34367,0.012042,0.35043,-0.18989,2.1289,-0.046081,1.8125,-0.16082,-0.19331,-0.11193,-0.13695,-0.0028571,-0.076101,-0.085822,-0.087453,0.22076,1.991,1.4802,1.4136,0.27608,-0.16802,-0.12098,-0.0077939,0.12812,-0.044582,1.9036,1.3444,-0.22253,-0.078069,1.2693,1.9027,0.036624,1.6486,1.4232,-0.11263,0.13569,2.0882,1.7645,1.9399,0.32205,0.31423,2.4627,2.1257,0.1025,-0.088002,0.1411,0.25408,-0.024291,0.17906,0.25147,0.085418,-0.29563,-0.14459,-0.13076,-0.38082,-0.10194,-0.15455,-0.13565,-0.059039,0.076514,0.17126,0.18992,0.22808,-0.11084,2.06,-0.277,-0.17377,0.23801,0.3581,-0.28557,0.11351,-0.23158,1.9483,1.789,-0.48278,2.3067,2.37,1.9307,2.1504,0.013239,2.0958,-0.037418,2.1942,0.07062,0.027401,-0.13152,0.19672,0.20463,0.11035,-0.2548,-0.24141,0.28379,0.067789,-0.032364,1.4913,-0.0041135,0.20735,0.38789,0.015608,0.1086,0.16175,-0.032861,-0.081114,2.225,-0.25762,-0.46731,-0.037439,1.629,0.27241,1.5057,0.27608,0.091154,0.39059,0.17645,0.012375,1.5533,0.25909,0.095204,2.3659,0.36377,-0.1816,-0.053666,0.20465,2.3286,-0.18406,0.026965,1.7582,-0.44946,1.8323,-0.35401,-0.13609,2.1335,-0.099202,2.1241,0.052811,0.18682,-0.47414,-0.30554,0.26214,2.1665,2.0874,1.1324,2.0095,0.0022866,-0.0039657,2.1546,-0.47807,-0.4825,0.41243,0.13097,0.31763,0.11737,1.8774,2.0797,0.27627,0.42446,-0.1303,2.3464,-0.19017,0.13946,2.1686,0.26825,-0.25575,0.27149,0.025714,1.8902,-0.46888,-0.093325,0.27233,0.20082,0.15056,1.8996,1.5256,1.5463,-0.025095,-0.099458,0.072039,0.54938,0.034185,-0.070287,2.2875,0.24268,0.021799,0.29327,0.093718,2.6908,1.8203,0.15977,-0.47145,0.10114,2.1525,1.8868,-0.038955,2.0905,0.74621,-0.17082,0.10088,-0.36804,1.5,1.8772,-0.41076,1.8604,-0.14157,0.32419,-0.28345,1.7375,0.27923,0.043571,-0.45048,-0.063968,1.7871,-0.035206,-0.18206,-0.035463,0.15945,0.070489,2.2596,1.7326,0.15425,-0.08999,0.01473,-0.23306,2.128,0.092471,0.02082,0.38224,-0.18646,-0.37498,2.0407,2.0518,2.7774,-0.16095,-0.26203,2.6012,1.7781,0.048821,-0.024324,0.054386,1.8788,0.16069,1.1991,0.21603,-0.10973,0.25426,0.31795,-0.16733,-0.17437,0.18086,0.10541,2.2444,2.2218,0.11723,2.1744,-0.092103,0.136,-0.14596,-0.10401,-0.096837,0.2052,0.13619,2.5722,1.6276,1.7033,-0.40895,1.9558,-0.028114,-0.21279,1.5254,1.7238,0.31005,0.27846,-0.15783,0.041085,2.6118,0.03859,-0.15871,0.074308,0.78923,2.2166,1.6391,0.36884,0.1554,0.22353,-0.50278,0.23192,2.135,0.040611,2.314,0.15565,0.40185,1.8158,1.8086,0.10868,1.4699,-0.13289,-0.74957,0.16551,0.021947,0.11958,-0.019406,1.6865,1.5241,2.517,-0.36835,-0.30391,-0.25585,-0.036205,1.9631,2.1617,0.26528,2.1377,1.5853,0.064995,0.24274,-0.35107,1.5128,-0.26436,-0.62628,0.25115,2.0926,0.28007,0.42896,0.29655,-0.0027794,-0.23983,2.2948,0.063874,-0.40653,0.12982,-0.050017,-0.3808,-0.060429,-0.017567,2.0087,0.32627,-0.12807,-0.17182,2.3091,0.24337,0.0831,2.4754,0.08803,0.05368,0.17867,9.1611e-05,-0.031034,0.092702,0.40996,-0.016747,0.43336,2.4282,0.12785,-0.10567,-0.012903,1.3415,1.9978,-0.078662,2.2394,0.046612,-0.069686,-0.13749,-0.0097678,-0.041116,-0.15595,-0.3744,2.4043,0.23758,-0.10871,0.083378,0.037846,2.2802,-0.089117,1.9235,-0.12244,-0.31839,-0.020782,0.13879,-0.28181,2.3512,1.5711,-0.2589,0.063293,-0.14098,-0.074053,0.47246,0.47258,-0.28994,0.075815)
    val p2 = DenseMatrix(2.0)

    val res = kernel(p1, p2, 0.3)
    println(res)
    val maxDiff: Double = max(res - DenseMatrix(3.2501e-09,5.2196e-10,3.7492e-08,2.6639e-14,8.6415e-13,4.237e-06,4.0315e-17,3.8381e-11,0.54982,6.7639e-09,3.6247e-13,3.717e-06,5.5878e-14,2.9166e-10,2.7207e-07,2.688e-12,0.91177,7.928e-11,0.82251,5.4271e-12,2.473e-12,1.7322e-11,9.5946e-12,2.0961e-10,3.9865e-11,3.184e-11,3.0659e-11,2.3014e-08,0.99955,0.22287,0.14803,6.7544e-08,4.5638e-12,1.4e-11,1.8778e-10,3.5147e-09,8.2028e-11,0.94967,0.091857,1.2074e-12,3.8095e-11,0.051484,0.94875,5.003e-10,0.50348,0.15753,1.704e-11,4.1126e-09,0.95769,0.73484,0.98014,1.6103e-07,1.3913e-07,0.30433,0.91602,2.0555e-09,3.027e-11,4.5995e-09,4.4198e-08,1.2976e-10,9.9939e-09,4.2008e-08,1.4314e-09,1.9276e-13,8.0007e-12,1.1111e-11,2.1077e-14,2.1881e-11,6.3064e-12,9.8966e-12,5.8995e-11,1.1839e-09,8.5333e-09,1.2443e-08,2.6588e-08,1.777e-11,0.98022,3.0942e-13,3.9726e-12,3.2315e-08,3.1307e-07,2.4903e-13,2.5905e-09,9.6533e-13,0.98526,0.78096,1.3409e-15,0.59293,0.4674,0.97368,0.88192,2.9947e-10,0.9503,9.6498e-11,0.81091,1.0436e-09,4.0893e-10,1.0915e-11,1.4263e-08,1.6706e-08,2.4247e-09,5.4119e-13,7.5606e-13,7.8258e-08,9.821e-10,1.0818e-10,0.23749,2.0383e-10,1.7638e-08,5.3645e-07,3.1554e-10,2.3368e-09,7.0302e-09,1.0697e-10,3.5507e-11,0.75476,5.0419e-13,2.0519e-15,9.6451e-11,0.46554,6.2956e-08,0.25726,6.7536e-08,1.6169e-09,5.6298e-07,9.4791e-09,2.9381e-10,0.33004,4.8702e-08,1.7618e-09,0.47535,3.4709e-07,3.2874e-12,6.6701e-11,1.6711e-08,0.54896,3.0966e-12,4.0504e-10,0.72274,3.3411e-15,0.85543,4.2662e-14,9.7925e-12,0.90579,2.3328e-11,0.91803,7.1114e-10,1.1689e-08,1.7011e-15,1.4963e-13,5.1651e-08,0.85722,0.95849,0.015271,0.9995,2.35e-10,2.045e-10,0.87564,1.5265e-15,1.3511e-15,8.2984e-07,3.7294e-09,1.4826e-07,2.809e-09,0.91993,0.96529,6.7785e-08,1.0251e-06,1.1234e-11,0.51353,2.6697e-12,4.4463e-09,0.85389,5.8114e-08,5.2836e-13,6.1848e-08,3.9408e-10,0.9352,1.9651e-15,2.675e-11,6.2854e-08,1.5482e-08,5.5896e-09,0.94558,0.28644,0.31871,1.2744e-10,2.3188e-11,1.0758e-09,8.373e-06,4.7437e-10,4.5578e-11,0.63177,3.5403e-08,3.6162e-10,9.3722e-08,1.7072e-09,0.070568,0.8358,6.7504e-09,1.8315e-15,1.9971e-09,0.87887,0.93126,9.3195e-11,0.95551,0.00016113,4.2662e-12,1.9865e-09,2.9531e-14,0.24933,0.9196,9.4991e-15,0.89736,8.5972e-12,1.6756e-07,2.628e-13,0.68196,7.1732e-08,5.8201e-10,3.2498e-15,5.2697e-11,0.77732,1.0145e-10,3.2508e-12,1.0086e-10,6.7073e-09,1.0407e-09,0.68772,0.6722,6.0294e-09,2.8906e-11,3.0949e-10,9.3043e-13,0.91299,1.6627e-09,3.5392e-10,4.8474e-07,2.9214e-12,2.4594e-14,0.99085,0.98518,0.034826,5.4093e-12,4.5134e-13,0.13424,0.76074,6.5228e-10,1.2967e-10,7.358e-10,0.9216,6.8788e-09,0.028349,2.0956e-08,1.8239e-11,4.4349e-08,1.4917e-07,4.6409e-12,3.9161e-12,1.0366e-08,2.1855e-09,0.71757,0.76095,2.8005e-09,0.84455,2.7521e-11,4.1393e-09,7.7438e-12,2.0849e-11,2.465e-11,1.6896e-08,4.1558e-09,0.16224,0.46284,0.61327,9.9712e-15,0.98921,1.1906e-10,1.535e-12,0.28608,0.65464,1.2863e-07,7.0687e-08,5.8302e-12,5.5138e-10,0.12504,5.2221e-10,5.7089e-12,1.1294e-09,0.00029039,0.77049,0.485,3.8056e-07,6.1729e-09,2.4306e-08,7.706e-16,2.8673e-08,0.90373,5.4572e-10,0.57834,6.2045e-09,6.8808e-07,0.82814,0.8158,2.3409e-09,0.20992,1.0565e-11,5.7451e-19,7.5894e-09,3.6279e-10,2.9414e-09,1.4482e-10,0.57922,0.2842,0.22649,2.9289e-14,1.5601e-13,5.2702e-13,9.9182e-11,0.99247,0.86481,5.4887e-08,0.90004,0.38467,9.2488e-10,3.5444e-08,4.6071e-14,0.26753,4.2561e-13,2.2828e-17,4.175e-08,0.95347,7.2901e-08,1.1091e-06,9.9739e-08,2.0998e-10,7.8632e-13,0.61696,9.0285e-10,1.0636e-14,3.641e-09,7.2487e-11,2.1089e-14,5.7148e-11,1.5092e-10,0.99958,1.7418e-07,1.1842e-11,4.1644e-12,0.58807,3.5884e-08,1.3625e-09,0.28495,1.5132e-09,7.2465e-10,9.915e-09,2.2382e-10,1.1147e-10,1.6709e-09,7.9441e-07,1.5371e-10,1.1974e-06,0.36113,3.4952e-09,2.0056e-11,1.6753e-10,0.08989,0.99997,3.7577e-11,0.72733,6.2175e-10,4.6212e-11,9.4729e-12,1.7969e-10,8.8741e-11,6.0997e-12,2.497e-14,0.40322,3.2044e-08,1.8679e-11,1.3706e-09,5.1382e-10,0.64648,2.9497e-11,0.96805,1.3528e-11,1.0757e-13,1.4041e-10,4.3855e-09,2.7391e-13,0.50396,0.35983,4.882e-13,8.9163e-10,8.7183e-12,4.1793e-11,2.345e-06,2.3499e-06,2.2283e-13,1.1664e-09))
    maxDiff < 1e-3 shouldBe true
  }

}
